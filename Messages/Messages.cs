// Generated by ProtoGen, Version=2.4.1.473, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace com.BlazeServer.Messages.MessageProtos {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public static partial class Messages {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_message_EnableEncryptionRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.EnableEncryptionRequest, global::com.BlazeServer.Messages.MessageProtos.EnableEncryptionRequest.Builder> internal__static_message_EnableEncryptionRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_message_EnableEncryptionResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.EnableEncryptionResponse, global::com.BlazeServer.Messages.MessageProtos.EnableEncryptionResponse.Builder> internal__static_message_EnableEncryptionResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_message_ServerConnectionResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse, global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Builder> internal__static_message_ServerConnectionResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_message_ServerConnectionResponse_KeyParameters__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Types.KeyParameters, global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Types.KeyParameters.Builder> internal__static_message_ServerConnectionResponse_KeyParameters__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_message_LoginRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.LoginRequest, global::com.BlazeServer.Messages.MessageProtos.LoginRequest.Builder> internal__static_message_LoginRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_message_CreateRoomRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.CreateRoomRequest, global::com.BlazeServer.Messages.MessageProtos.CreateRoomRequest.Builder> internal__static_message_CreateRoomRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_message_CreateRoomVariableRequest__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.CreateRoomVariableRequest, global::com.BlazeServer.Messages.MessageProtos.CreateRoomVariableRequest.Builder> internal__static_message_CreateRoomVariableRequest__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_message_RoomVariable__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.RoomVariable, global::com.BlazeServer.Messages.MessageProtos.RoomVariable.Builder> internal__static_message_RoomVariable__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_message_JoinRoomEvent__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.JoinRoomEvent, global::com.BlazeServer.Messages.MessageProtos.JoinRoomEvent.Builder> internal__static_message_JoinRoomEvent__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_message_LoginResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.LoginResponse, global::com.BlazeServer.Messages.MessageProtos.LoginResponse.Builder> internal__static_message_LoginResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_message_TestMessage__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.TestMessage, global::com.BlazeServer.Messages.MessageProtos.TestMessage.Builder> internal__static_message_TestMessage__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static Messages() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "Cg5tZXNzYWdlcy5wcm90bxIHbWVzc2FnZSJQChdFbmFibGVFbmNyeXB0aW9u" + 
          "UmVxdWVzdBISCgptZXNzYWdlX2lkGAEgAigFEg4KBmVuYWJsZRgCIAIoCBIR" + 
          "CglwdWJsaWNrZXkYAyACKAwiUgoYRW5hYmxlRW5jcnlwdGlvblJlc3BvbnNl" + 
          "EhIKCm1lc3NhZ2VfaWQYASACKAUSDwoHc3VjY2VzcxgCIAIoCBIRCglwdWJs" + 
          "aWNrZXkYAyABKAwimgEKGFNlcnZlckNvbm5lY3Rpb25SZXNwb25zZRISCgpt" + 
          "ZXNzYWdlX2lkGAEgAigFEkMKCnBhcmFtZXRlcnMYAiACKAsyLy5tZXNzYWdl" + 
          "LlNlcnZlckNvbm5lY3Rpb25SZXNwb25zZS5LZXlQYXJhbWV0ZXJzGiUKDUtl" + 
          "eVBhcmFtZXRlcnMSCQoBZxgBIAIoCRIJCgFwGAIgAigJIiEKDExvZ2luUmVx" + 
          "dWVzdBIRCgl1c2VyX25hbWUYASACKAkiJgoRQ3JlYXRlUm9vbVJlcXVlc3QS" + 
          "EQoJcm9vbV9uYW1lGAEgAigJIlcKGUNyZWF0ZVJvb21WYXJpYWJsZVJlcXVl" + 
          "c3QSEQoJcm9vbV9uYW1lGAEgAigJEicKCHZhcmlhYmxlGAIgAigLMhUubWVz" + 
          "c2FnZS5Sb29tVmFyaWFibGUiKwoMUm9vbVZhcmlhYmxlEgwKBG5hbWUYASAC" + 
          "KAkSDQoFdmFsdWUYAiACKAkiWwoNSm9pblJvb21FdmVudBIRCglyb29tX25h" + 
          "bWUYASACKAkSDQoFdXNlcnMYAiADKAkSKAoJdmFyaWFibGVzGAMgAygLMhUu" + 
          "bWVzc2FnZS5Sb29tVmFyaWFibGUiIAoNTG9naW5SZXNwb25zZRIPCgdzdWNj" + 
          "ZXNzGAEgAigIIiEKC1Rlc3RNZXNzYWdlEhIKCm1lc3NhZ2VfaWQYASACKAVC" + 
          "KQoYY29tLkJsYXplU2VydmVyLk1lc3NhZ2VzQg1NZXNzYWdlUHJvdG9z");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_message_EnableEncryptionRequest__Descriptor = Descriptor.MessageTypes[0];
        internal__static_message_EnableEncryptionRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.EnableEncryptionRequest, global::com.BlazeServer.Messages.MessageProtos.EnableEncryptionRequest.Builder>(internal__static_message_EnableEncryptionRequest__Descriptor,
                new string[] { "MessageId", "Enable", "Publickey", });
        internal__static_message_EnableEncryptionResponse__Descriptor = Descriptor.MessageTypes[1];
        internal__static_message_EnableEncryptionResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.EnableEncryptionResponse, global::com.BlazeServer.Messages.MessageProtos.EnableEncryptionResponse.Builder>(internal__static_message_EnableEncryptionResponse__Descriptor,
                new string[] { "MessageId", "Success", "Publickey", });
        internal__static_message_ServerConnectionResponse__Descriptor = Descriptor.MessageTypes[2];
        internal__static_message_ServerConnectionResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse, global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Builder>(internal__static_message_ServerConnectionResponse__Descriptor,
                new string[] { "MessageId", "Parameters", });
        internal__static_message_ServerConnectionResponse_KeyParameters__Descriptor = internal__static_message_ServerConnectionResponse__Descriptor.NestedTypes[0];
        internal__static_message_ServerConnectionResponse_KeyParameters__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Types.KeyParameters, global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Types.KeyParameters.Builder>(internal__static_message_ServerConnectionResponse_KeyParameters__Descriptor,
                new string[] { "G", "P", });
        internal__static_message_LoginRequest__Descriptor = Descriptor.MessageTypes[3];
        internal__static_message_LoginRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.LoginRequest, global::com.BlazeServer.Messages.MessageProtos.LoginRequest.Builder>(internal__static_message_LoginRequest__Descriptor,
                new string[] { "UserName", });
        internal__static_message_CreateRoomRequest__Descriptor = Descriptor.MessageTypes[4];
        internal__static_message_CreateRoomRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.CreateRoomRequest, global::com.BlazeServer.Messages.MessageProtos.CreateRoomRequest.Builder>(internal__static_message_CreateRoomRequest__Descriptor,
                new string[] { "RoomName", });
        internal__static_message_CreateRoomVariableRequest__Descriptor = Descriptor.MessageTypes[5];
        internal__static_message_CreateRoomVariableRequest__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.CreateRoomVariableRequest, global::com.BlazeServer.Messages.MessageProtos.CreateRoomVariableRequest.Builder>(internal__static_message_CreateRoomVariableRequest__Descriptor,
                new string[] { "RoomName", "Variable", });
        internal__static_message_RoomVariable__Descriptor = Descriptor.MessageTypes[6];
        internal__static_message_RoomVariable__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.RoomVariable, global::com.BlazeServer.Messages.MessageProtos.RoomVariable.Builder>(internal__static_message_RoomVariable__Descriptor,
                new string[] { "Name", "Value", });
        internal__static_message_JoinRoomEvent__Descriptor = Descriptor.MessageTypes[7];
        internal__static_message_JoinRoomEvent__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.JoinRoomEvent, global::com.BlazeServer.Messages.MessageProtos.JoinRoomEvent.Builder>(internal__static_message_JoinRoomEvent__Descriptor,
                new string[] { "RoomName", "Users", "Variables", });
        internal__static_message_LoginResponse__Descriptor = Descriptor.MessageTypes[8];
        internal__static_message_LoginResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.LoginResponse, global::com.BlazeServer.Messages.MessageProtos.LoginResponse.Builder>(internal__static_message_LoginResponse__Descriptor,
                new string[] { "Success", });
        internal__static_message_TestMessage__Descriptor = Descriptor.MessageTypes[9];
        internal__static_message_TestMessage__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.BlazeServer.Messages.MessageProtos.TestMessage, global::com.BlazeServer.Messages.MessageProtos.TestMessage.Builder>(internal__static_message_TestMessage__Descriptor,
                new string[] { "MessageId", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class EnableEncryptionRequest : pb::GeneratedMessage<EnableEncryptionRequest, EnableEncryptionRequest.Builder> {
    private EnableEncryptionRequest() { }
    private static readonly EnableEncryptionRequest defaultInstance = new EnableEncryptionRequest().MakeReadOnly();
    private static readonly string[] _enableEncryptionRequestFieldNames = new string[] { "enable", "message_id", "publickey" };
    private static readonly uint[] _enableEncryptionRequestFieldTags = new uint[] { 16, 8, 26 };
    public static EnableEncryptionRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EnableEncryptionRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EnableEncryptionRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_EnableEncryptionRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EnableEncryptionRequest, EnableEncryptionRequest.Builder> InternalFieldAccessors {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_EnableEncryptionRequest__FieldAccessorTable; }
    }
    
    public const int MessageIdFieldNumber = 1;
    private bool hasMessageId;
    private int messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    public int MessageId {
      get { return messageId_; }
    }
    
    public const int EnableFieldNumber = 2;
    private bool hasEnable;
    private bool enable_;
    public bool HasEnable {
      get { return hasEnable; }
    }
    public bool Enable {
      get { return enable_; }
    }
    
    public const int PublickeyFieldNumber = 3;
    private bool hasPublickey;
    private pb::ByteString publickey_ = pb::ByteString.Empty;
    public bool HasPublickey {
      get { return hasPublickey; }
    }
    public pb::ByteString Publickey {
      get { return publickey_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMessageId) return false;
        if (!hasEnable) return false;
        if (!hasPublickey) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _enableEncryptionRequestFieldNames;
      if (hasMessageId) {
        output.WriteInt32(1, field_names[1], MessageId);
      }
      if (hasEnable) {
        output.WriteBool(2, field_names[0], Enable);
      }
      if (hasPublickey) {
        output.WriteBytes(3, field_names[2], Publickey);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMessageId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, MessageId);
        }
        if (hasEnable) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, Enable);
        }
        if (hasPublickey) {
          size += pb::CodedOutputStream.ComputeBytesSize(3, Publickey);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static EnableEncryptionRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EnableEncryptionRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EnableEncryptionRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EnableEncryptionRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EnableEncryptionRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EnableEncryptionRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EnableEncryptionRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EnableEncryptionRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EnableEncryptionRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EnableEncryptionRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EnableEncryptionRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EnableEncryptionRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<EnableEncryptionRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EnableEncryptionRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EnableEncryptionRequest result;
      
      private EnableEncryptionRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          EnableEncryptionRequest original = result;
          result = new EnableEncryptionRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EnableEncryptionRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.EnableEncryptionRequest.Descriptor; }
      }
      
      public override EnableEncryptionRequest DefaultInstanceForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.EnableEncryptionRequest.DefaultInstance; }
      }
      
      public override EnableEncryptionRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EnableEncryptionRequest) {
          return MergeFrom((EnableEncryptionRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EnableEncryptionRequest other) {
        if (other == global::com.BlazeServer.Messages.MessageProtos.EnableEncryptionRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessageId) {
          MessageId = other.MessageId;
        }
        if (other.HasEnable) {
          Enable = other.Enable;
        }
        if (other.HasPublickey) {
          Publickey = other.Publickey;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_enableEncryptionRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _enableEncryptionRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMessageId = input.ReadInt32(ref result.messageId_);
              break;
            }
            case 16: {
              result.hasEnable = input.ReadBool(ref result.enable_);
              break;
            }
            case 26: {
              result.hasPublickey = input.ReadBytes(ref result.publickey_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessageId {
        get { return result.hasMessageId; }
      }
      public int MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      public Builder SetMessageId(int value) {
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = 0;
        return this;
      }
      
      public bool HasEnable {
        get { return result.hasEnable; }
      }
      public bool Enable {
        get { return result.Enable; }
        set { SetEnable(value); }
      }
      public Builder SetEnable(bool value) {
        PrepareBuilder();
        result.hasEnable = true;
        result.enable_ = value;
        return this;
      }
      public Builder ClearEnable() {
        PrepareBuilder();
        result.hasEnable = false;
        result.enable_ = false;
        return this;
      }
      
      public bool HasPublickey {
        get { return result.hasPublickey; }
      }
      public pb::ByteString Publickey {
        get { return result.Publickey; }
        set { SetPublickey(value); }
      }
      public Builder SetPublickey(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPublickey = true;
        result.publickey_ = value;
        return this;
      }
      public Builder ClearPublickey() {
        PrepareBuilder();
        result.hasPublickey = false;
        result.publickey_ = pb::ByteString.Empty;
        return this;
      }
    }
    static EnableEncryptionRequest() {
      object.ReferenceEquals(global::com.BlazeServer.Messages.MessageProtos.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class EnableEncryptionResponse : pb::GeneratedMessage<EnableEncryptionResponse, EnableEncryptionResponse.Builder> {
    private EnableEncryptionResponse() { }
    private static readonly EnableEncryptionResponse defaultInstance = new EnableEncryptionResponse().MakeReadOnly();
    private static readonly string[] _enableEncryptionResponseFieldNames = new string[] { "message_id", "publickey", "success" };
    private static readonly uint[] _enableEncryptionResponseFieldTags = new uint[] { 8, 26, 16 };
    public static EnableEncryptionResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override EnableEncryptionResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override EnableEncryptionResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_EnableEncryptionResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<EnableEncryptionResponse, EnableEncryptionResponse.Builder> InternalFieldAccessors {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_EnableEncryptionResponse__FieldAccessorTable; }
    }
    
    public const int MessageIdFieldNumber = 1;
    private bool hasMessageId;
    private int messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    public int MessageId {
      get { return messageId_; }
    }
    
    public const int SuccessFieldNumber = 2;
    private bool hasSuccess;
    private bool success_;
    public bool HasSuccess {
      get { return hasSuccess; }
    }
    public bool Success {
      get { return success_; }
    }
    
    public const int PublickeyFieldNumber = 3;
    private bool hasPublickey;
    private pb::ByteString publickey_ = pb::ByteString.Empty;
    public bool HasPublickey {
      get { return hasPublickey; }
    }
    public pb::ByteString Publickey {
      get { return publickey_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMessageId) return false;
        if (!hasSuccess) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _enableEncryptionResponseFieldNames;
      if (hasMessageId) {
        output.WriteInt32(1, field_names[0], MessageId);
      }
      if (hasSuccess) {
        output.WriteBool(2, field_names[2], Success);
      }
      if (hasPublickey) {
        output.WriteBytes(3, field_names[1], Publickey);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMessageId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, MessageId);
        }
        if (hasSuccess) {
          size += pb::CodedOutputStream.ComputeBoolSize(2, Success);
        }
        if (hasPublickey) {
          size += pb::CodedOutputStream.ComputeBytesSize(3, Publickey);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static EnableEncryptionResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EnableEncryptionResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EnableEncryptionResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static EnableEncryptionResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static EnableEncryptionResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EnableEncryptionResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static EnableEncryptionResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static EnableEncryptionResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static EnableEncryptionResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static EnableEncryptionResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private EnableEncryptionResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(EnableEncryptionResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<EnableEncryptionResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(EnableEncryptionResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private EnableEncryptionResponse result;
      
      private EnableEncryptionResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          EnableEncryptionResponse original = result;
          result = new EnableEncryptionResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override EnableEncryptionResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.EnableEncryptionResponse.Descriptor; }
      }
      
      public override EnableEncryptionResponse DefaultInstanceForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.EnableEncryptionResponse.DefaultInstance; }
      }
      
      public override EnableEncryptionResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is EnableEncryptionResponse) {
          return MergeFrom((EnableEncryptionResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(EnableEncryptionResponse other) {
        if (other == global::com.BlazeServer.Messages.MessageProtos.EnableEncryptionResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessageId) {
          MessageId = other.MessageId;
        }
        if (other.HasSuccess) {
          Success = other.Success;
        }
        if (other.HasPublickey) {
          Publickey = other.Publickey;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_enableEncryptionResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _enableEncryptionResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMessageId = input.ReadInt32(ref result.messageId_);
              break;
            }
            case 16: {
              result.hasSuccess = input.ReadBool(ref result.success_);
              break;
            }
            case 26: {
              result.hasPublickey = input.ReadBytes(ref result.publickey_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessageId {
        get { return result.hasMessageId; }
      }
      public int MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      public Builder SetMessageId(int value) {
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = 0;
        return this;
      }
      
      public bool HasSuccess {
        get { return result.hasSuccess; }
      }
      public bool Success {
        get { return result.Success; }
        set { SetSuccess(value); }
      }
      public Builder SetSuccess(bool value) {
        PrepareBuilder();
        result.hasSuccess = true;
        result.success_ = value;
        return this;
      }
      public Builder ClearSuccess() {
        PrepareBuilder();
        result.hasSuccess = false;
        result.success_ = false;
        return this;
      }
      
      public bool HasPublickey {
        get { return result.hasPublickey; }
      }
      public pb::ByteString Publickey {
        get { return result.Publickey; }
        set { SetPublickey(value); }
      }
      public Builder SetPublickey(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPublickey = true;
        result.publickey_ = value;
        return this;
      }
      public Builder ClearPublickey() {
        PrepareBuilder();
        result.hasPublickey = false;
        result.publickey_ = pb::ByteString.Empty;
        return this;
      }
    }
    static EnableEncryptionResponse() {
      object.ReferenceEquals(global::com.BlazeServer.Messages.MessageProtos.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class ServerConnectionResponse : pb::GeneratedMessage<ServerConnectionResponse, ServerConnectionResponse.Builder> {
    private ServerConnectionResponse() { }
    private static readonly ServerConnectionResponse defaultInstance = new ServerConnectionResponse().MakeReadOnly();
    private static readonly string[] _serverConnectionResponseFieldNames = new string[] { "message_id", "parameters" };
    private static readonly uint[] _serverConnectionResponseFieldTags = new uint[] { 8, 18 };
    public static ServerConnectionResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ServerConnectionResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ServerConnectionResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_ServerConnectionResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ServerConnectionResponse, ServerConnectionResponse.Builder> InternalFieldAccessors {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_ServerConnectionResponse__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public static class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
      [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
      public sealed partial class KeyParameters : pb::GeneratedMessage<KeyParameters, KeyParameters.Builder> {
        private KeyParameters() { }
        private static readonly KeyParameters defaultInstance = new KeyParameters().MakeReadOnly();
        private static readonly string[] _keyParametersFieldNames = new string[] { "g", "p" };
        private static readonly uint[] _keyParametersFieldTags = new uint[] { 10, 18 };
        public static KeyParameters DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override KeyParameters DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override KeyParameters ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_ServerConnectionResponse_KeyParameters__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<KeyParameters, KeyParameters.Builder> InternalFieldAccessors {
          get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_ServerConnectionResponse_KeyParameters__FieldAccessorTable; }
        }
        
        public const int GFieldNumber = 1;
        private bool hasG;
        private string g_ = "";
        public bool HasG {
          get { return hasG; }
        }
        public string G {
          get { return g_; }
        }
        
        public const int PFieldNumber = 2;
        private bool hasP;
        private string p_ = "";
        public bool HasP {
          get { return hasP; }
        }
        public string P {
          get { return p_; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasG) return false;
            if (!hasP) return false;
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          int size = SerializedSize;
          string[] field_names = _keyParametersFieldNames;
          if (hasG) {
            output.WriteString(1, field_names[0], G);
          }
          if (hasP) {
            output.WriteString(2, field_names[1], P);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            
            size = 0;
            if (hasG) {
              size += pb::CodedOutputStream.ComputeStringSize(1, G);
            }
            if (hasP) {
              size += pb::CodedOutputStream.ComputeStringSize(2, P);
            }
            size += UnknownFields.SerializedSize;
            memoizedSerializedSize = size;
            return size;
          }
        }
        
        public static KeyParameters ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static KeyParameters ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static KeyParameters ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static KeyParameters ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static KeyParameters ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static KeyParameters ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static KeyParameters ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static KeyParameters ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static KeyParameters ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static KeyParameters ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private KeyParameters MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(KeyParameters prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
        public sealed partial class Builder : pb::GeneratedBuilder<KeyParameters, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(KeyParameters cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private KeyParameters result;
          
          private KeyParameters PrepareBuilder() {
            if (resultIsReadOnly) {
              KeyParameters original = result;
              result = new KeyParameters();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override KeyParameters MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Types.KeyParameters.Descriptor; }
          }
          
          public override KeyParameters DefaultInstanceForType {
            get { return global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Types.KeyParameters.DefaultInstance; }
          }
          
          public override KeyParameters BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is KeyParameters) {
              return MergeFrom((KeyParameters) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(KeyParameters other) {
            if (other == global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Types.KeyParameters.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasG) {
              G = other.G;
            }
            if (other.HasP) {
              P = other.P;
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_keyParametersFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _keyParametersFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  result.hasG = input.ReadString(ref result.g_);
                  break;
                }
                case 18: {
                  result.hasP = input.ReadString(ref result.p_);
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasG {
            get { return result.hasG; }
          }
          public string G {
            get { return result.G; }
            set { SetG(value); }
          }
          public Builder SetG(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasG = true;
            result.g_ = value;
            return this;
          }
          public Builder ClearG() {
            PrepareBuilder();
            result.hasG = false;
            result.g_ = "";
            return this;
          }
          
          public bool HasP {
            get { return result.hasP; }
          }
          public string P {
            get { return result.P; }
            set { SetP(value); }
          }
          public Builder SetP(string value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasP = true;
            result.p_ = value;
            return this;
          }
          public Builder ClearP() {
            PrepareBuilder();
            result.hasP = false;
            result.p_ = "";
            return this;
          }
        }
        static KeyParameters() {
          object.ReferenceEquals(global::com.BlazeServer.Messages.MessageProtos.Messages.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int MessageIdFieldNumber = 1;
    private bool hasMessageId;
    private int messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    public int MessageId {
      get { return messageId_; }
    }
    
    public const int ParametersFieldNumber = 2;
    private bool hasParameters;
    private global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Types.KeyParameters parameters_;
    public bool HasParameters {
      get { return hasParameters; }
    }
    public global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Types.KeyParameters Parameters {
      get { return parameters_ ?? global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Types.KeyParameters.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMessageId) return false;
        if (!hasParameters) return false;
        if (!Parameters.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _serverConnectionResponseFieldNames;
      if (hasMessageId) {
        output.WriteInt32(1, field_names[0], MessageId);
      }
      if (hasParameters) {
        output.WriteMessage(2, field_names[1], Parameters);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMessageId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, MessageId);
        }
        if (hasParameters) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Parameters);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static ServerConnectionResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ServerConnectionResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ServerConnectionResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ServerConnectionResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ServerConnectionResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ServerConnectionResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ServerConnectionResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ServerConnectionResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ServerConnectionResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ServerConnectionResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ServerConnectionResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ServerConnectionResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<ServerConnectionResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ServerConnectionResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ServerConnectionResponse result;
      
      private ServerConnectionResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          ServerConnectionResponse original = result;
          result = new ServerConnectionResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ServerConnectionResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Descriptor; }
      }
      
      public override ServerConnectionResponse DefaultInstanceForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.DefaultInstance; }
      }
      
      public override ServerConnectionResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ServerConnectionResponse) {
          return MergeFrom((ServerConnectionResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ServerConnectionResponse other) {
        if (other == global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessageId) {
          MessageId = other.MessageId;
        }
        if (other.HasParameters) {
          MergeParameters(other.Parameters);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_serverConnectionResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _serverConnectionResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMessageId = input.ReadInt32(ref result.messageId_);
              break;
            }
            case 18: {
              global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Types.KeyParameters.Builder subBuilder = global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Types.KeyParameters.CreateBuilder();
              if (result.hasParameters) {
                subBuilder.MergeFrom(Parameters);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Parameters = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessageId {
        get { return result.hasMessageId; }
      }
      public int MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      public Builder SetMessageId(int value) {
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = 0;
        return this;
      }
      
      public bool HasParameters {
       get { return result.hasParameters; }
      }
      public global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Types.KeyParameters Parameters {
        get { return result.Parameters; }
        set { SetParameters(value); }
      }
      public Builder SetParameters(global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Types.KeyParameters value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasParameters = true;
        result.parameters_ = value;
        return this;
      }
      public Builder SetParameters(global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Types.KeyParameters.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasParameters = true;
        result.parameters_ = builderForValue.Build();
        return this;
      }
      public Builder MergeParameters(global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Types.KeyParameters value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasParameters &&
            result.parameters_ != global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Types.KeyParameters.DefaultInstance) {
            result.parameters_ = global::com.BlazeServer.Messages.MessageProtos.ServerConnectionResponse.Types.KeyParameters.CreateBuilder(result.parameters_).MergeFrom(value).BuildPartial();
        } else {
          result.parameters_ = value;
        }
        result.hasParameters = true;
        return this;
      }
      public Builder ClearParameters() {
        PrepareBuilder();
        result.hasParameters = false;
        result.parameters_ = null;
        return this;
      }
    }
    static ServerConnectionResponse() {
      object.ReferenceEquals(global::com.BlazeServer.Messages.MessageProtos.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class LoginRequest : pb::GeneratedMessage<LoginRequest, LoginRequest.Builder> {
    private LoginRequest() { }
    private static readonly LoginRequest defaultInstance = new LoginRequest().MakeReadOnly();
    private static readonly string[] _loginRequestFieldNames = new string[] { "user_name" };
    private static readonly uint[] _loginRequestFieldTags = new uint[] { 10 };
    public static LoginRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoginRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_LoginRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoginRequest, LoginRequest.Builder> InternalFieldAccessors {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_LoginRequest__FieldAccessorTable; }
    }
    
    public const int UserNameFieldNumber = 1;
    private bool hasUserName;
    private string userName_ = "";
    public bool HasUserName {
      get { return hasUserName; }
    }
    public string UserName {
      get { return userName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUserName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _loginRequestFieldNames;
      if (hasUserName) {
        output.WriteString(1, field_names[0], UserName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUserName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, UserName);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LoginRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoginRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoginRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoginRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoginRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<LoginRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginRequest result;
      
      private LoginRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginRequest original = result;
          result = new LoginRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.LoginRequest.Descriptor; }
      }
      
      public override LoginRequest DefaultInstanceForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.LoginRequest.DefaultInstance; }
      }
      
      public override LoginRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoginRequest) {
          return MergeFrom((LoginRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginRequest other) {
        if (other == global::com.BlazeServer.Messages.MessageProtos.LoginRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUserName) {
          UserName = other.UserName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUserName = input.ReadString(ref result.userName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUserName {
        get { return result.hasUserName; }
      }
      public string UserName {
        get { return result.UserName; }
        set { SetUserName(value); }
      }
      public Builder SetUserName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUserName = true;
        result.userName_ = value;
        return this;
      }
      public Builder ClearUserName() {
        PrepareBuilder();
        result.hasUserName = false;
        result.userName_ = "";
        return this;
      }
    }
    static LoginRequest() {
      object.ReferenceEquals(global::com.BlazeServer.Messages.MessageProtos.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateRoomRequest : pb::GeneratedMessage<CreateRoomRequest, CreateRoomRequest.Builder> {
    private CreateRoomRequest() { }
    private static readonly CreateRoomRequest defaultInstance = new CreateRoomRequest().MakeReadOnly();
    private static readonly string[] _createRoomRequestFieldNames = new string[] { "room_name" };
    private static readonly uint[] _createRoomRequestFieldTags = new uint[] { 10 };
    public static CreateRoomRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateRoomRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateRoomRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_CreateRoomRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateRoomRequest, CreateRoomRequest.Builder> InternalFieldAccessors {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_CreateRoomRequest__FieldAccessorTable; }
    }
    
    public const int RoomNameFieldNumber = 1;
    private bool hasRoomName;
    private string roomName_ = "";
    public bool HasRoomName {
      get { return hasRoomName; }
    }
    public string RoomName {
      get { return roomName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoomName) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createRoomRequestFieldNames;
      if (hasRoomName) {
        output.WriteString(1, field_names[0], RoomName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoomName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, RoomName);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateRoomRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateRoomRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateRoomRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateRoomRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateRoomRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateRoomRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateRoomRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateRoomRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateRoomRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateRoomRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateRoomRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateRoomRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateRoomRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateRoomRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateRoomRequest result;
      
      private CreateRoomRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateRoomRequest original = result;
          result = new CreateRoomRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateRoomRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.CreateRoomRequest.Descriptor; }
      }
      
      public override CreateRoomRequest DefaultInstanceForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.CreateRoomRequest.DefaultInstance; }
      }
      
      public override CreateRoomRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateRoomRequest) {
          return MergeFrom((CreateRoomRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateRoomRequest other) {
        if (other == global::com.BlazeServer.Messages.MessageProtos.CreateRoomRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoomName) {
          RoomName = other.RoomName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createRoomRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createRoomRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasRoomName = input.ReadString(ref result.roomName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoomName {
        get { return result.hasRoomName; }
      }
      public string RoomName {
        get { return result.RoomName; }
        set { SetRoomName(value); }
      }
      public Builder SetRoomName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRoomName = true;
        result.roomName_ = value;
        return this;
      }
      public Builder ClearRoomName() {
        PrepareBuilder();
        result.hasRoomName = false;
        result.roomName_ = "";
        return this;
      }
    }
    static CreateRoomRequest() {
      object.ReferenceEquals(global::com.BlazeServer.Messages.MessageProtos.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class CreateRoomVariableRequest : pb::GeneratedMessage<CreateRoomVariableRequest, CreateRoomVariableRequest.Builder> {
    private CreateRoomVariableRequest() { }
    private static readonly CreateRoomVariableRequest defaultInstance = new CreateRoomVariableRequest().MakeReadOnly();
    private static readonly string[] _createRoomVariableRequestFieldNames = new string[] { "room_name", "variable" };
    private static readonly uint[] _createRoomVariableRequestFieldTags = new uint[] { 10, 18 };
    public static CreateRoomVariableRequest DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CreateRoomVariableRequest DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CreateRoomVariableRequest ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_CreateRoomVariableRequest__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CreateRoomVariableRequest, CreateRoomVariableRequest.Builder> InternalFieldAccessors {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_CreateRoomVariableRequest__FieldAccessorTable; }
    }
    
    public const int RoomNameFieldNumber = 1;
    private bool hasRoomName;
    private string roomName_ = "";
    public bool HasRoomName {
      get { return hasRoomName; }
    }
    public string RoomName {
      get { return roomName_; }
    }
    
    public const int VariableFieldNumber = 2;
    private bool hasVariable;
    private global::com.BlazeServer.Messages.MessageProtos.RoomVariable variable_;
    public bool HasVariable {
      get { return hasVariable; }
    }
    public global::com.BlazeServer.Messages.MessageProtos.RoomVariable Variable {
      get { return variable_ ?? global::com.BlazeServer.Messages.MessageProtos.RoomVariable.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoomName) return false;
        if (!hasVariable) return false;
        if (!Variable.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _createRoomVariableRequestFieldNames;
      if (hasRoomName) {
        output.WriteString(1, field_names[0], RoomName);
      }
      if (hasVariable) {
        output.WriteMessage(2, field_names[1], Variable);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoomName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, RoomName);
        }
        if (hasVariable) {
          size += pb::CodedOutputStream.ComputeMessageSize(2, Variable);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static CreateRoomVariableRequest ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateRoomVariableRequest ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateRoomVariableRequest ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CreateRoomVariableRequest ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CreateRoomVariableRequest ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateRoomVariableRequest ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CreateRoomVariableRequest ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CreateRoomVariableRequest ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CreateRoomVariableRequest ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CreateRoomVariableRequest ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CreateRoomVariableRequest MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CreateRoomVariableRequest prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<CreateRoomVariableRequest, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CreateRoomVariableRequest cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CreateRoomVariableRequest result;
      
      private CreateRoomVariableRequest PrepareBuilder() {
        if (resultIsReadOnly) {
          CreateRoomVariableRequest original = result;
          result = new CreateRoomVariableRequest();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CreateRoomVariableRequest MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.CreateRoomVariableRequest.Descriptor; }
      }
      
      public override CreateRoomVariableRequest DefaultInstanceForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.CreateRoomVariableRequest.DefaultInstance; }
      }
      
      public override CreateRoomVariableRequest BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CreateRoomVariableRequest) {
          return MergeFrom((CreateRoomVariableRequest) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CreateRoomVariableRequest other) {
        if (other == global::com.BlazeServer.Messages.MessageProtos.CreateRoomVariableRequest.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoomName) {
          RoomName = other.RoomName;
        }
        if (other.HasVariable) {
          MergeVariable(other.Variable);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_createRoomVariableRequestFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _createRoomVariableRequestFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasRoomName = input.ReadString(ref result.roomName_);
              break;
            }
            case 18: {
              global::com.BlazeServer.Messages.MessageProtos.RoomVariable.Builder subBuilder = global::com.BlazeServer.Messages.MessageProtos.RoomVariable.CreateBuilder();
              if (result.hasVariable) {
                subBuilder.MergeFrom(Variable);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Variable = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoomName {
        get { return result.hasRoomName; }
      }
      public string RoomName {
        get { return result.RoomName; }
        set { SetRoomName(value); }
      }
      public Builder SetRoomName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRoomName = true;
        result.roomName_ = value;
        return this;
      }
      public Builder ClearRoomName() {
        PrepareBuilder();
        result.hasRoomName = false;
        result.roomName_ = "";
        return this;
      }
      
      public bool HasVariable {
       get { return result.hasVariable; }
      }
      public global::com.BlazeServer.Messages.MessageProtos.RoomVariable Variable {
        get { return result.Variable; }
        set { SetVariable(value); }
      }
      public Builder SetVariable(global::com.BlazeServer.Messages.MessageProtos.RoomVariable value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVariable = true;
        result.variable_ = value;
        return this;
      }
      public Builder SetVariable(global::com.BlazeServer.Messages.MessageProtos.RoomVariable.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasVariable = true;
        result.variable_ = builderForValue.Build();
        return this;
      }
      public Builder MergeVariable(global::com.BlazeServer.Messages.MessageProtos.RoomVariable value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasVariable &&
            result.variable_ != global::com.BlazeServer.Messages.MessageProtos.RoomVariable.DefaultInstance) {
            result.variable_ = global::com.BlazeServer.Messages.MessageProtos.RoomVariable.CreateBuilder(result.variable_).MergeFrom(value).BuildPartial();
        } else {
          result.variable_ = value;
        }
        result.hasVariable = true;
        return this;
      }
      public Builder ClearVariable() {
        PrepareBuilder();
        result.hasVariable = false;
        result.variable_ = null;
        return this;
      }
    }
    static CreateRoomVariableRequest() {
      object.ReferenceEquals(global::com.BlazeServer.Messages.MessageProtos.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class RoomVariable : pb::GeneratedMessage<RoomVariable, RoomVariable.Builder> {
    private RoomVariable() { }
    private static readonly RoomVariable defaultInstance = new RoomVariable().MakeReadOnly();
    private static readonly string[] _roomVariableFieldNames = new string[] { "name", "value" };
    private static readonly uint[] _roomVariableFieldTags = new uint[] { 10, 18 };
    public static RoomVariable DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RoomVariable DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RoomVariable ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_RoomVariable__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RoomVariable, RoomVariable.Builder> InternalFieldAccessors {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_RoomVariable__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int ValueFieldNumber = 2;
    private bool hasValue;
    private string value_ = "";
    public bool HasValue {
      get { return hasValue; }
    }
    public string Value {
      get { return value_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        if (!hasValue) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _roomVariableFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[0], Name);
      }
      if (hasValue) {
        output.WriteString(2, field_names[1], Value);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Name);
        }
        if (hasValue) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Value);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static RoomVariable ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoomVariable ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoomVariable ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RoomVariable ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RoomVariable ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoomVariable ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RoomVariable ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RoomVariable ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RoomVariable ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RoomVariable ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RoomVariable MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RoomVariable prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<RoomVariable, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RoomVariable cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RoomVariable result;
      
      private RoomVariable PrepareBuilder() {
        if (resultIsReadOnly) {
          RoomVariable original = result;
          result = new RoomVariable();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RoomVariable MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.RoomVariable.Descriptor; }
      }
      
      public override RoomVariable DefaultInstanceForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.RoomVariable.DefaultInstance; }
      }
      
      public override RoomVariable BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RoomVariable) {
          return MergeFrom((RoomVariable) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RoomVariable other) {
        if (other == global::com.BlazeServer.Messages.MessageProtos.RoomVariable.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasValue) {
          Value = other.Value;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_roomVariableFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _roomVariableFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 18: {
              result.hasValue = input.ReadString(ref result.value_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasValue {
        get { return result.hasValue; }
      }
      public string Value {
        get { return result.Value; }
        set { SetValue(value); }
      }
      public Builder SetValue(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder ClearValue() {
        PrepareBuilder();
        result.hasValue = false;
        result.value_ = "";
        return this;
      }
    }
    static RoomVariable() {
      object.ReferenceEquals(global::com.BlazeServer.Messages.MessageProtos.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class JoinRoomEvent : pb::GeneratedMessage<JoinRoomEvent, JoinRoomEvent.Builder> {
    private JoinRoomEvent() { }
    private static readonly JoinRoomEvent defaultInstance = new JoinRoomEvent().MakeReadOnly();
    private static readonly string[] _joinRoomEventFieldNames = new string[] { "room_name", "users", "variables" };
    private static readonly uint[] _joinRoomEventFieldTags = new uint[] { 10, 18, 26 };
    public static JoinRoomEvent DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override JoinRoomEvent DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override JoinRoomEvent ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_JoinRoomEvent__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<JoinRoomEvent, JoinRoomEvent.Builder> InternalFieldAccessors {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_JoinRoomEvent__FieldAccessorTable; }
    }
    
    public const int RoomNameFieldNumber = 1;
    private bool hasRoomName;
    private string roomName_ = "";
    public bool HasRoomName {
      get { return hasRoomName; }
    }
    public string RoomName {
      get { return roomName_; }
    }
    
    public const int UsersFieldNumber = 2;
    private pbc::PopsicleList<string> users_ = new pbc::PopsicleList<string>();
    public scg::IList<string> UsersList {
      get { return pbc::Lists.AsReadOnly(users_); }
    }
    public int UsersCount {
      get { return users_.Count; }
    }
    public string GetUsers(int index) {
      return users_[index];
    }
    
    public const int VariablesFieldNumber = 3;
    private pbc::PopsicleList<global::com.BlazeServer.Messages.MessageProtos.RoomVariable> variables_ = new pbc::PopsicleList<global::com.BlazeServer.Messages.MessageProtos.RoomVariable>();
    public scg::IList<global::com.BlazeServer.Messages.MessageProtos.RoomVariable> VariablesList {
      get { return variables_; }
    }
    public int VariablesCount {
      get { return variables_.Count; }
    }
    public global::com.BlazeServer.Messages.MessageProtos.RoomVariable GetVariables(int index) {
      return variables_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasRoomName) return false;
        foreach (global::com.BlazeServer.Messages.MessageProtos.RoomVariable element in VariablesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _joinRoomEventFieldNames;
      if (hasRoomName) {
        output.WriteString(1, field_names[0], RoomName);
      }
      if (users_.Count > 0) {
        output.WriteStringArray(2, field_names[1], users_);
      }
      if (variables_.Count > 0) {
        output.WriteMessageArray(3, field_names[2], variables_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasRoomName) {
          size += pb::CodedOutputStream.ComputeStringSize(1, RoomName);
        }
        {
          int dataSize = 0;
          foreach (string element in UsersList) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * users_.Count;
        }
        foreach (global::com.BlazeServer.Messages.MessageProtos.RoomVariable element in VariablesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(3, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static JoinRoomEvent ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinRoomEvent ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinRoomEvent ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static JoinRoomEvent ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static JoinRoomEvent ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinRoomEvent ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static JoinRoomEvent ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static JoinRoomEvent ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static JoinRoomEvent ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static JoinRoomEvent ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private JoinRoomEvent MakeReadOnly() {
      users_.MakeReadOnly();
      variables_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(JoinRoomEvent prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<JoinRoomEvent, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(JoinRoomEvent cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private JoinRoomEvent result;
      
      private JoinRoomEvent PrepareBuilder() {
        if (resultIsReadOnly) {
          JoinRoomEvent original = result;
          result = new JoinRoomEvent();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override JoinRoomEvent MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.JoinRoomEvent.Descriptor; }
      }
      
      public override JoinRoomEvent DefaultInstanceForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.JoinRoomEvent.DefaultInstance; }
      }
      
      public override JoinRoomEvent BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is JoinRoomEvent) {
          return MergeFrom((JoinRoomEvent) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(JoinRoomEvent other) {
        if (other == global::com.BlazeServer.Messages.MessageProtos.JoinRoomEvent.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasRoomName) {
          RoomName = other.RoomName;
        }
        if (other.users_.Count != 0) {
          result.users_.Add(other.users_);
        }
        if (other.variables_.Count != 0) {
          result.variables_.Add(other.variables_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_joinRoomEventFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _joinRoomEventFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasRoomName = input.ReadString(ref result.roomName_);
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.users_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.variables_, global::com.BlazeServer.Messages.MessageProtos.RoomVariable.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasRoomName {
        get { return result.hasRoomName; }
      }
      public string RoomName {
        get { return result.RoomName; }
        set { SetRoomName(value); }
      }
      public Builder SetRoomName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRoomName = true;
        result.roomName_ = value;
        return this;
      }
      public Builder ClearRoomName() {
        PrepareBuilder();
        result.hasRoomName = false;
        result.roomName_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<string> UsersList {
        get { return PrepareBuilder().users_; }
      }
      public int UsersCount {
        get { return result.UsersCount; }
      }
      public string GetUsers(int index) {
        return result.GetUsers(index);
      }
      public Builder SetUsers(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.users_[index] = value;
        return this;
      }
      public Builder AddUsers(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.users_.Add(value);
        return this;
      }
      public Builder AddRangeUsers(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.users_.Add(values);
        return this;
      }
      public Builder ClearUsers() {
        PrepareBuilder();
        result.users_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::com.BlazeServer.Messages.MessageProtos.RoomVariable> VariablesList {
        get { return PrepareBuilder().variables_; }
      }
      public int VariablesCount {
        get { return result.VariablesCount; }
      }
      public global::com.BlazeServer.Messages.MessageProtos.RoomVariable GetVariables(int index) {
        return result.GetVariables(index);
      }
      public Builder SetVariables(int index, global::com.BlazeServer.Messages.MessageProtos.RoomVariable value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.variables_[index] = value;
        return this;
      }
      public Builder SetVariables(int index, global::com.BlazeServer.Messages.MessageProtos.RoomVariable.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.variables_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddVariables(global::com.BlazeServer.Messages.MessageProtos.RoomVariable value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.variables_.Add(value);
        return this;
      }
      public Builder AddVariables(global::com.BlazeServer.Messages.MessageProtos.RoomVariable.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.variables_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeVariables(scg::IEnumerable<global::com.BlazeServer.Messages.MessageProtos.RoomVariable> values) {
        PrepareBuilder();
        result.variables_.Add(values);
        return this;
      }
      public Builder ClearVariables() {
        PrepareBuilder();
        result.variables_.Clear();
        return this;
      }
    }
    static JoinRoomEvent() {
      object.ReferenceEquals(global::com.BlazeServer.Messages.MessageProtos.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class LoginResponse : pb::GeneratedMessage<LoginResponse, LoginResponse.Builder> {
    private LoginResponse() { }
    private static readonly LoginResponse defaultInstance = new LoginResponse().MakeReadOnly();
    private static readonly string[] _loginResponseFieldNames = new string[] { "success" };
    private static readonly uint[] _loginResponseFieldTags = new uint[] { 8 };
    public static LoginResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LoginResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LoginResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_LoginResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LoginResponse, LoginResponse.Builder> InternalFieldAccessors {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_LoginResponse__FieldAccessorTable; }
    }
    
    public const int SuccessFieldNumber = 1;
    private bool hasSuccess;
    private bool success_;
    public bool HasSuccess {
      get { return hasSuccess; }
    }
    public bool Success {
      get { return success_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSuccess) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _loginResponseFieldNames;
      if (hasSuccess) {
        output.WriteBool(1, field_names[0], Success);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasSuccess) {
          size += pb::CodedOutputStream.ComputeBoolSize(1, Success);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static LoginResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LoginResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LoginResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LoginResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LoginResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LoginResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LoginResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LoginResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LoginResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<LoginResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LoginResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LoginResponse result;
      
      private LoginResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          LoginResponse original = result;
          result = new LoginResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LoginResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.LoginResponse.Descriptor; }
      }
      
      public override LoginResponse DefaultInstanceForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.LoginResponse.DefaultInstance; }
      }
      
      public override LoginResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LoginResponse) {
          return MergeFrom((LoginResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LoginResponse other) {
        if (other == global::com.BlazeServer.Messages.MessageProtos.LoginResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSuccess) {
          Success = other.Success;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_loginResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _loginResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSuccess = input.ReadBool(ref result.success_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSuccess {
        get { return result.hasSuccess; }
      }
      public bool Success {
        get { return result.Success; }
        set { SetSuccess(value); }
      }
      public Builder SetSuccess(bool value) {
        PrepareBuilder();
        result.hasSuccess = true;
        result.success_ = value;
        return this;
      }
      public Builder ClearSuccess() {
        PrepareBuilder();
        result.hasSuccess = false;
        result.success_ = false;
        return this;
      }
    }
    static LoginResponse() {
      object.ReferenceEquals(global::com.BlazeServer.Messages.MessageProtos.Messages.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
  [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
  public sealed partial class TestMessage : pb::GeneratedMessage<TestMessage, TestMessage.Builder> {
    private TestMessage() { }
    private static readonly TestMessage defaultInstance = new TestMessage().MakeReadOnly();
    private static readonly string[] _testMessageFieldNames = new string[] { "message_id" };
    private static readonly uint[] _testMessageFieldTags = new uint[] { 8 };
    public static TestMessage DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TestMessage DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TestMessage ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_TestMessage__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TestMessage, TestMessage.Builder> InternalFieldAccessors {
      get { return global::com.BlazeServer.Messages.MessageProtos.Messages.internal__static_message_TestMessage__FieldAccessorTable; }
    }
    
    public const int MessageIdFieldNumber = 1;
    private bool hasMessageId;
    private int messageId_;
    public bool HasMessageId {
      get { return hasMessageId; }
    }
    public int MessageId {
      get { return messageId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMessageId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _testMessageFieldNames;
      if (hasMessageId) {
        output.WriteInt32(1, field_names[0], MessageId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasMessageId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, MessageId);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static TestMessage ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TestMessage ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TestMessage ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TestMessage ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TestMessage ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TestMessage ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TestMessage ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TestMessage ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TestMessage ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TestMessage ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TestMessage MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TestMessage prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ProtoGen", "2.4.1.473")]
    public sealed partial class Builder : pb::GeneratedBuilder<TestMessage, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TestMessage cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TestMessage result;
      
      private TestMessage PrepareBuilder() {
        if (resultIsReadOnly) {
          TestMessage original = result;
          result = new TestMessage();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TestMessage MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.TestMessage.Descriptor; }
      }
      
      public override TestMessage DefaultInstanceForType {
        get { return global::com.BlazeServer.Messages.MessageProtos.TestMessage.DefaultInstance; }
      }
      
      public override TestMessage BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TestMessage) {
          return MergeFrom((TestMessage) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TestMessage other) {
        if (other == global::com.BlazeServer.Messages.MessageProtos.TestMessage.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMessageId) {
          MessageId = other.MessageId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_testMessageFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _testMessageFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasMessageId = input.ReadInt32(ref result.messageId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMessageId {
        get { return result.hasMessageId; }
      }
      public int MessageId {
        get { return result.MessageId; }
        set { SetMessageId(value); }
      }
      public Builder SetMessageId(int value) {
        PrepareBuilder();
        result.hasMessageId = true;
        result.messageId_ = value;
        return this;
      }
      public Builder ClearMessageId() {
        PrepareBuilder();
        result.hasMessageId = false;
        result.messageId_ = 0;
        return this;
      }
    }
    static TestMessage() {
      object.ReferenceEquals(global::com.BlazeServer.Messages.MessageProtos.Messages.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
